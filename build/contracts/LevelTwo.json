{
  "contractName": "LevelTwo",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "level",
          "type": "uint256"
        }
      ],
      "name": "numberOfUsersPerLevel",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "levelOne",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "currentLevel",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_level",
          "type": "uint256"
        }
      ],
      "name": "usersInLevel",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberOfUsers",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getAddressByIndex",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "users",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "level",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "levelTwo",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x6060604052662386f26fc10000600755662386f26fc10000600855336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610bd9806100696000396000f3006060604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c024234146100bf5780630d7b081c146100f657806337c40f4e14610159578063507ffba514610189578063691a037a146101e6578063727ff93b1461023357806375ce46a7146102ab5780638da5cb5b146102d4578063928074fd14610329578063ce10cf8814610359578063f2020275146103bc578063f2fde38b1461046e575b600080fd5b34156100ca57600080fd5b6100e060048080359060200190919050506104a7565b6040518082815260200191505060405180910390f35b341561010157600080fd5b61011760048080359060200190919050506104c4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61016f60048080359060200190919050506104f7565b604051808215151515815260200191505060405180910390f35b341561019457600080fd5b6101e4600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061054e565b005b34156101f157600080fd5b61021d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610684565b6040518082815260200191505060405180910390f35b341561023e57600080fd5b61025460048080359060200190919050506106d0565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561029757808201518184015260208101905061027c565b505050509050019250505060405180910390f35b34156102b657600080fd5b6102be610857565b6040518082815260200191505060405180910390f35b34156102df57600080fd5b6102e7610864565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61033f6004808035906020019091905050610889565b604051808215151515815260200191505060405180910390f35b341561036457600080fd5b61037a60048080359060200190919050506108e0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103c757600080fd5b6103cf610924565b604051808060200183815260200182810382528481815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561045e5780601f106104335761010080835404028352916020019161045e565b820191906000526020600020905b81548152906001019060200180831161044157829003601f168201915b5050935050505060405180910390f35b341561047957600080fd5b6104a5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610935565b005b600060066000838152602001908152602001600020549050919050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061050333610684565b90506007543414151561051557600080fd5b6001811480156105255750600183145b1561054357610532610a0f565b61053a610a43565b60019150610548565b600091505b50919050565b6000600580548060010182816105649190610ac8565b9160005260206000209001600033909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019080519060200190610609929190610af4565b506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061065b33610684565b905060066000828152602001908152602001600020600081548092919060010191905055505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b6106d8610b74565b6106e0610b74565b60008060066000868152602001908152602001600020546040518059106107045750595b9080825280602002602001820160405250925060009150600090505b60058054905081101561084c57846003600060058481548110151561074157fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141561083f576005818154811015156107c057fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683838151811015156107fa57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081806001019250505b8080600101915050610720565b829350505050919050565b6000600580549050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061089533610684565b9050600854341415156108a757600080fd5b6002811480156108b75750600283145b156108d5576108c4610a0f565b6108cc610a43565b600191506108da565b600091505b50919050565b60006005828154811015156108f157fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600180600001908060010154905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561099057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156109cc57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610a1a33610684565b905060066000828152602001908152602001600020600081548092919060019003919050555050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008154809291906001019190505550610aa033610684565b9050600660008281526020019081526020016000206000815480929190600101919050555050565b815481835581811511610aef57818360005260206000209182019101610aee9190610b88565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b3557805160ff1916838001178555610b63565b82800160010185558215610b63579182015b82811115610b62578251825591602001919060010190610b47565b5b509050610b709190610b88565b5090565b602060405190810160405280600081525090565b610baa91905b80821115610ba6576000816000905550600101610b8e565b5090565b905600a165627a7a72305820af0c847e6e65cdcf085505d086a699dff6753ffb144c00f72bd4633bcc2404d70029",
  "deployedBytecode": "0x6060604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c024234146100bf5780630d7b081c146100f657806337c40f4e14610159578063507ffba514610189578063691a037a146101e6578063727ff93b1461023357806375ce46a7146102ab5780638da5cb5b146102d4578063928074fd14610329578063ce10cf8814610359578063f2020275146103bc578063f2fde38b1461046e575b600080fd5b34156100ca57600080fd5b6100e060048080359060200190919050506104a7565b6040518082815260200191505060405180910390f35b341561010157600080fd5b61011760048080359060200190919050506104c4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61016f60048080359060200190919050506104f7565b604051808215151515815260200191505060405180910390f35b341561019457600080fd5b6101e4600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061054e565b005b34156101f157600080fd5b61021d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610684565b6040518082815260200191505060405180910390f35b341561023e57600080fd5b61025460048080359060200190919050506106d0565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561029757808201518184015260208101905061027c565b505050509050019250505060405180910390f35b34156102b657600080fd5b6102be610857565b6040518082815260200191505060405180910390f35b34156102df57600080fd5b6102e7610864565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61033f6004808035906020019091905050610889565b604051808215151515815260200191505060405180910390f35b341561036457600080fd5b61037a60048080359060200190919050506108e0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103c757600080fd5b6103cf610924565b604051808060200183815260200182810382528481815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561045e5780601f106104335761010080835404028352916020019161045e565b820191906000526020600020905b81548152906001019060200180831161044157829003601f168201915b5050935050505060405180910390f35b341561047957600080fd5b6104a5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610935565b005b600060066000838152602001908152602001600020549050919050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061050333610684565b90506007543414151561051557600080fd5b6001811480156105255750600183145b1561054357610532610a0f565b61053a610a43565b60019150610548565b600091505b50919050565b6000600580548060010182816105649190610ac8565b9160005260206000209001600033909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019080519060200190610609929190610af4565b506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061065b33610684565b905060066000828152602001908152602001600020600081548092919060010191905055505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b6106d8610b74565b6106e0610b74565b60008060066000868152602001908152602001600020546040518059106107045750595b9080825280602002602001820160405250925060009150600090505b60058054905081101561084c57846003600060058481548110151561074157fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141561083f576005818154811015156107c057fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683838151811015156107fa57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081806001019250505b8080600101915050610720565b829350505050919050565b6000600580549050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061089533610684565b9050600854341415156108a757600080fd5b6002811480156108b75750600283145b156108d5576108c4610a0f565b6108cc610a43565b600191506108da565b600091505b50919050565b60006005828154811015156108f157fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600180600001908060010154905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561099057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156109cc57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610a1a33610684565b905060066000828152602001908152602001600020600081548092919060019003919050555050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008154809291906001019190505550610aa033610684565b9050600660008281526020019081526020016000206000815480929190600101919050555050565b815481835581811511610aef57818360005260206000209182019101610aee9190610b88565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b3557805160ff1916838001178555610b63565b82800160010185558215610b63579182015b82811115610b62578251825591602001919060010190610b47565b5b509050610b709190610b88565b5090565b602060405190810160405280600081525090565b610baa91905b80821115610ba6576000816000905550600101610b8e565b5090565b905600a165627a7a72305820af0c847e6e65cdcf085505d086a699dff6753ffb144c00f72bd4633bcc2404d70029",
  "sourceMap": "52:566:5:-;;;187:9:2;167:29;;181:9:5;161:29;;200:10:8;192:5;;:18;;;;;;;;;;;;;;;;;;52:566:5;;;;;;",
  "deployedSourceMap": "52:566:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2094:125:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;581:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;311:312:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:554:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1854:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2421:429;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;1988:100:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;302:313:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2225:117:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;409:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;432:132:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;2094:125:9;2162:4;2185:20;:27;2206:5;2185:27;;;;;;;;;;;;2178:34;;2094:125;;;:::o;581:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;311:312:2:-;366:4;378:10;391:24;404:10;391:12;:24::i;:::-;378:37;;443:12;;430:9;:25;422:34;;;;;;;;475:1;466:5;:10;:25;;;;;490:1;480:6;:11;466:25;462:155;;;499:22;:20;:22::i;:::-;528:16;:14;:16::i;:::-;558:4;551:11;;;;462:155;600:5;593:12;;311:312;;;;;:::o;794:554:9:-;1081:10;894:13;:30;;;;;;;;;;;:::i;:::-;;;;;;;;;;913:10;894:30;;;;;;;;;;;;;;;;;;;;;;;991:4;960:11;:23;972:10;960:23;;;;;;;;;;;;;;;:28;;:35;;;;;;;;;;;;:::i;:::-;;1069:1;1037:11;:23;1049:10;1037:23;;;;;;;;;;;;;;;:29;;:33;;;;1094:24;1107:10;1094:12;:24::i;:::-;1081:37;;1312:20;:27;1333:5;1312:27;;;;;;;;;;;;:29;;;;;;;;;;;;;794:554;;:::o;1854:128::-;1922:4;1945:11;:24;1957:11;1945:24;;;;;;;;;;;;;;;:30;;;1938:37;;1854:128;;;:::o;2421:429::-;2479:9;;:::i;:::-;2500:23;;:::i;:::-;2579:12;2610:6;2540:20;:28;2561:6;2540:28;;;;;;;;;;;;2526:43;;;;;;;;;;;;;;;;;;;;;;;;2500:69;;2594:1;2579:16;;2619:1;2610:10;;2605:216;2626:13;:20;;;;2622:1;:24;2605:216;;;2709:6;2670:11;:29;2682:13;2696:1;2682:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;2670:29;;;;;;;;;;;;;;;:35;;;:45;2667:144;;;2753:13;2767:1;2753:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:6;2742:7;2735:15;;;;;;;;;;;;;;;;;:34;;;;;;;;;;;2787:9;;;;;;;2667:144;2648:3;;;;;;;2605:216;;;2837:6;2830:13;;2421:429;;;;;;:::o;1988:100::-;2038:4;2061:13;:20;;;;2054:27;;1988:100;:::o;49:20:8:-;;;;;;;;;;;;;:::o;302:313:5:-;357:4;372:10;385:24;398:10;385:12;:24::i;:::-;372:37;;438:12;;425:9;:25;417:34;;;;;;;;470:1;461:5;:10;:25;;;;;485:1;475:6;:11;461:25;457:154;;;494:22;:20;:22::i;:::-;522:16;:14;:16::i;:::-;552:4;545:11;;;;457:154;594:5;587:12;;302:313;;;;;:::o;2225:117:9:-;2289:7;2315:13;2329:5;2315:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;2308:27;;2225:117;;;:::o;409:23::-;;;;;;;;;;;;;:::o;432:132:8:-;328:5;;;;;;;;;;;314:19;;:10;:19;;;306:28;;;;;;;;528:1;508:22;;:8;:22;;;;500:31;;;;;;;;551:8;543:5;;:16;;;;;;;;;;;;;;;;;;432:132;:::o;1567:135:9:-;1618:10;1631:24;1644:10;1631:12;:24::i;:::-;1618:37;;1666:20;:27;1687:5;1666:27;;;;;;;;;;;;:29;;;;;;;;;;;;;;1567:135;:::o;1354:207::-;1476:10;1434:11;:23;1446:10;1434:23;;;;;;;;;;;;;;;:29;;;:31;;;;;;;;;;;;;1489:24;1502:10;1489:12;:24::i;:::-;1476:37;;1524:20;:27;1545:5;1524:27;;;;;;;;;;;;:29;;;;;;;;;;;;;1354:207;:::o;52:566:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.17;\n\nimport \"./LevelOne.sol\";\n\ncontract LevelTwo is LevelOne { \n\n\t// @dev This is the amount of ETH a user has to spend to make a guess\n    uint payToPlayFee = .01 ether;\n\n    // @dev If a user guesses correctly, the incrementLevel() is called and they advance to the next level \n\tfunction levelTwo(uint answer) public payable returns (bool) {\n\t\t\t\n\t\t\tuint level = currentLevel(msg.sender);\t\t\n\n\t\t\trequire(msg.value == payToPlayFee);\n\n\t\t\tif (level == 2 && answer == 2) {\n\t\t\t\tremoveFromPriorLevel();\n\t\t\t\tincrementLevel();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\n            \treturn false;\n        \t}\n\t\t}\n\n}\n",
  "sourcePath": "/Users/kseniya/Documents/coding/blockchainCoding/blockchain-tutorial/contracts/LevelTwo.sol",
  "ast": {
    "absolutePath": "/Users/kseniya/Documents/coding/blockchainCoding/blockchain-tutorial/contracts/LevelTwo.sol",
    "exportedSymbols": {
      "LevelTwo": [
        330
      ]
    },
    "id": 331,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 281,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/Users/kseniya/Documents/coding/blockchainCoding/blockchain-tutorial/contracts/LevelOne.sol",
        "file": "./LevelOne.sol",
        "id": 282,
        "nodeType": "ImportDirective",
        "scope": 331,
        "sourceUnit": 153,
        "src": "26:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 283,
              "name": "LevelOne",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 152,
              "src": "73:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LevelOne_$152",
                "typeString": "contract LevelOne"
              }
            },
            "id": 284,
            "nodeType": "InheritanceSpecifier",
            "src": "73:8:5"
          }
        ],
        "contractDependencies": [
          641,
          860,
          152
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 330,
        "linearizedBaseContracts": [
          330,
          152,
          860,
          641
        ],
        "name": "LevelTwo",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 287,
            "name": "payToPlayFee",
            "nodeType": "VariableDeclaration",
            "scope": 330,
            "src": "161:29:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 285,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "161:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "2e3031",
              "id": 286,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "181:9:5",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": ".01"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "363:252:5",
              "statements": [
                {
                  "assignments": [
                    295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 295,
                      "name": "level",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "372:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "372:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 300,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 297,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 970,
                          "src": "398:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "398:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 296,
                      "name": "currentLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "385:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "385:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "372:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 302,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 970,
                            "src": "425:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "425:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 304,
                          "name": "payToPlayFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 287,
                          "src": "438:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "425:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "417:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "417:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "417:34:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 308,
                        "name": "level",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 295,
                        "src": "461:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "470:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "461:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 311,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "475:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "485:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "475:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "461:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 326,
                    "nodeType": "Block",
                    "src": "571:40:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "594:5:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 293,
                        "id": 325,
                        "nodeType": "Return",
                        "src": "587:12:5"
                      }
                    ]
                  },
                  "id": 327,
                  "nodeType": "IfStatement",
                  "src": "457:154:5",
                  "trueBody": {
                    "id": 323,
                    "nodeType": "Block",
                    "src": "488:74:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 315,
                            "name": "removeFromPriorLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "494:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "494:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 317,
                        "nodeType": "ExpressionStatement",
                        "src": "494:22:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 318,
                            "name": "incrementLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 736,
                            "src": "522:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "522:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 320,
                        "nodeType": "ExpressionStatement",
                        "src": "522:16:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "552:4:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 293,
                        "id": 322,
                        "nodeType": "Return",
                        "src": "545:11:5"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 329,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "levelTwo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 289,
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "320:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 288,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "319:13:5"
            },
            "payable": true,
            "returnParameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "357:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "356:6:5"
            },
            "scope": 330,
            "src": "302:313:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 331,
        "src": "52:566:5"
      }
    ],
    "src": "0:619:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/kseniya/Documents/coding/blockchainCoding/blockchain-tutorial/contracts/LevelTwo.sol",
    "exportedSymbols": {
      "LevelTwo": [
        330
      ]
    },
    "id": 331,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 281,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/Users/kseniya/Documents/coding/blockchainCoding/blockchain-tutorial/contracts/LevelOne.sol",
        "file": "./LevelOne.sol",
        "id": 282,
        "nodeType": "ImportDirective",
        "scope": 331,
        "sourceUnit": 153,
        "src": "26:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 283,
              "name": "LevelOne",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 152,
              "src": "73:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LevelOne_$152",
                "typeString": "contract LevelOne"
              }
            },
            "id": 284,
            "nodeType": "InheritanceSpecifier",
            "src": "73:8:5"
          }
        ],
        "contractDependencies": [
          641,
          860,
          152
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 330,
        "linearizedBaseContracts": [
          330,
          152,
          860,
          641
        ],
        "name": "LevelTwo",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 287,
            "name": "payToPlayFee",
            "nodeType": "VariableDeclaration",
            "scope": 330,
            "src": "161:29:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 285,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "161:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "2e3031",
              "id": 286,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "181:9:5",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": ".01"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "363:252:5",
              "statements": [
                {
                  "assignments": [
                    295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 295,
                      "name": "level",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "372:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "372:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 300,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 297,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 970,
                          "src": "398:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "398:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 296,
                      "name": "currentLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "385:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "385:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "372:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 302,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 970,
                            "src": "425:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "425:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 304,
                          "name": "payToPlayFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 287,
                          "src": "438:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "425:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "417:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "417:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "417:34:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 308,
                        "name": "level",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 295,
                        "src": "461:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "470:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "461:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 311,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "475:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "485:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "475:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "461:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 326,
                    "nodeType": "Block",
                    "src": "571:40:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "594:5:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 293,
                        "id": 325,
                        "nodeType": "Return",
                        "src": "587:12:5"
                      }
                    ]
                  },
                  "id": 327,
                  "nodeType": "IfStatement",
                  "src": "457:154:5",
                  "trueBody": {
                    "id": 323,
                    "nodeType": "Block",
                    "src": "488:74:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 315,
                            "name": "removeFromPriorLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "494:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "494:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 317,
                        "nodeType": "ExpressionStatement",
                        "src": "494:22:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 318,
                            "name": "incrementLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 736,
                            "src": "522:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "522:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 320,
                        "nodeType": "ExpressionStatement",
                        "src": "522:16:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "552:4:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 293,
                        "id": 322,
                        "nodeType": "Return",
                        "src": "545:11:5"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 329,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "levelTwo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 289,
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "320:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 288,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "319:13:5"
            },
            "payable": true,
            "returnParameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "357:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "356:6:5"
            },
            "scope": 330,
            "src": "302:313:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 331,
        "src": "52:566:5"
      }
    ],
    "src": "0:619:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {
    "1523057109908": {
      "events": {},
      "links": {},
      "address": "0xd0891e479a713e6be2140bec9097a1850e77d719",
      "transactionHash": "0x53ce69fb95155d6f54cabb002c58ebbb88152d6d12e912c2c3d2f44892637908"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-06T23:44:45.933Z"
}