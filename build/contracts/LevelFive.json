{
  "contractName": "LevelFive",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "level",
          "type": "uint256"
        }
      ],
      "name": "numberOfUsersPerLevel",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "levelThree",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "levelOne",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "currentLevel",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_level",
          "type": "uint256"
        }
      ],
      "name": "usersInLevel",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberOfUsers",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "levelTwo",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getAddressByIndex",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "levelFour",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "users",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "level",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "levelFive",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x6060604052662386f26fc10000600755662386f26fc10000600855662386f26fc10000600955662386f26fc10000600a55662386f26fc10000600b55336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d8f8061008a6000396000f3006060604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c024234146100e05780630d7b081c14610117578063146cb2591461017a57806337c40f4e146101aa578063507ffba5146101da578063691a037a14610237578063727ff93b1461028457806375ce46a7146102fc5780638da5cb5b14610325578063928074fd1461037a578063ce10cf88146103aa578063d94e2ad51461040d578063f20202751461043d578063f2fde38b146104ef578063fd5da00114610528575b600080fd5b34156100eb57600080fd5b6101016004808035906020019091905050610558565b6040518082815260200191505060405180910390f35b341561012257600080fd5b6101386004808035906020019091905050610575565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61019060048080359060200190919050506105a8565b604051808215151515815260200191505060405180910390f35b6101c060048080359060200190919050506105ff565b604051808215151515815260200191505060405180910390f35b34156101e557600080fd5b610235600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610656565b005b341561024257600080fd5b61026e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061078c565b6040518082815260200191505060405180910390f35b341561028f57600080fd5b6102a560048080359060200190919050506107d8565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102e85780820151818401526020810190506102cd565b505050509050019250505060405180910390f35b341561030757600080fd5b61030f61095f565b6040518082815260200191505060405180910390f35b341561033057600080fd5b61033861096c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103906004808035906020019091905050610991565b604051808215151515815260200191505060405180910390f35b34156103b557600080fd5b6103cb60048080359060200190919050506109e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104236004808035906020019091905050610a2c565b604051808215151515815260200191505060405180910390f35b341561044857600080fd5b610450610a83565b60405180806020018381526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156104df5780601f106104b4576101008083540402835291602001916104df565b820191906000526020600020905b8154815290600101906020018083116104c257829003601f168201915b5050935050505060405180910390f35b34156104fa57600080fd5b610526600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a94565b005b61053e6004808035906020019091905050610b6e565b604051808215151515815260200191505060405180910390f35b600060066000838152602001908152602001600020549050919050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105b43361078c565b9050600954341415156105c657600080fd5b6003811480156105d65750600383145b156105f4576105e3610bc5565b6105eb610bf9565b600191506105f9565b600091505b50919050565b60008061060b3361078c565b90506007543414151561061d57600080fd5b60018114801561062d5750600183145b1561064b5761063a610bc5565b610642610bf9565b60019150610650565b600091505b50919050565b60006005805480600101828161066c9190610c7e565b9160005260206000209001600033909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019080519060200190610711929190610caa565b506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506107633361078c565b905060066000828152602001908152602001600020600081548092919060010191905055505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b6107e0610d2a565b6107e8610d2a565b600080600660008681526020019081526020016000205460405180591061080c5750595b9080825280602002602001820160405250925060009150600090505b60058054905081101561095457846003600060058481548110151561084957fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541415610947576005818154811015156108c857fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838381518110151561090257fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081806001019250505b8080600101915050610828565b829350505050919050565b6000600580549050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061099d3361078c565b9050600854341415156109af57600080fd5b6002811480156109bf5750600283145b156109dd576109cc610bc5565b6109d4610bf9565b600191506109e2565b600091505b50919050565b60006005828154811015156109f957fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610a383361078c565b9050600a5434141515610a4a57600080fd5b600481148015610a5a5750600483145b15610a7857610a67610bc5565b610a6f610bf9565b60019150610a7d565b600091505b50919050565b600180600001908060010154905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610aef57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610b2b57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080610b7a3361078c565b9050600b5434141515610b8c57600080fd5b600581148015610b9c5750600583145b15610bba57610ba9610bc5565b610bb1610bf9565b60019150610bbf565b600091505b50919050565b6000610bd03361078c565b905060066000828152602001908152602001600020600081548092919060019003919050555050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008154809291906001019190505550610c563361078c565b9050600660008281526020019081526020016000206000815480929190600101919050555050565b815481835581811511610ca557818360005260206000209182019101610ca49190610d3e565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ceb57805160ff1916838001178555610d19565b82800160010185558215610d19579182015b82811115610d18578251825591602001919060010190610cfd565b5b509050610d269190610d3e565b5090565b602060405190810160405280600081525090565b610d6091905b80821115610d5c576000816000905550600101610d44565b5090565b905600a165627a7a72305820c571ffb16d6c30b4829ae0e1cb507f15d6876d8b319f9e1c81ac3893606f32dd0029",
  "deployedBytecode": "0x6060604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c024234146100e05780630d7b081c14610117578063146cb2591461017a57806337c40f4e146101aa578063507ffba5146101da578063691a037a14610237578063727ff93b1461028457806375ce46a7146102fc5780638da5cb5b14610325578063928074fd1461037a578063ce10cf88146103aa578063d94e2ad51461040d578063f20202751461043d578063f2fde38b146104ef578063fd5da00114610528575b600080fd5b34156100eb57600080fd5b6101016004808035906020019091905050610558565b6040518082815260200191505060405180910390f35b341561012257600080fd5b6101386004808035906020019091905050610575565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61019060048080359060200190919050506105a8565b604051808215151515815260200191505060405180910390f35b6101c060048080359060200190919050506105ff565b604051808215151515815260200191505060405180910390f35b34156101e557600080fd5b610235600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610656565b005b341561024257600080fd5b61026e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061078c565b6040518082815260200191505060405180910390f35b341561028f57600080fd5b6102a560048080359060200190919050506107d8565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102e85780820151818401526020810190506102cd565b505050509050019250505060405180910390f35b341561030757600080fd5b61030f61095f565b6040518082815260200191505060405180910390f35b341561033057600080fd5b61033861096c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103906004808035906020019091905050610991565b604051808215151515815260200191505060405180910390f35b34156103b557600080fd5b6103cb60048080359060200190919050506109e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104236004808035906020019091905050610a2c565b604051808215151515815260200191505060405180910390f35b341561044857600080fd5b610450610a83565b60405180806020018381526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156104df5780601f106104b4576101008083540402835291602001916104df565b820191906000526020600020905b8154815290600101906020018083116104c257829003601f168201915b5050935050505060405180910390f35b34156104fa57600080fd5b610526600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a94565b005b61053e6004808035906020019091905050610b6e565b604051808215151515815260200191505060405180910390f35b600060066000838152602001908152602001600020549050919050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105b43361078c565b9050600954341415156105c657600080fd5b6003811480156105d65750600383145b156105f4576105e3610bc5565b6105eb610bf9565b600191506105f9565b600091505b50919050565b60008061060b3361078c565b90506007543414151561061d57600080fd5b60018114801561062d5750600183145b1561064b5761063a610bc5565b610642610bf9565b60019150610650565b600091505b50919050565b60006005805480600101828161066c9190610c7e565b9160005260206000209001600033909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019080519060200190610711929190610caa565b506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506107633361078c565b905060066000828152602001908152602001600020600081548092919060010191905055505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b6107e0610d2a565b6107e8610d2a565b600080600660008681526020019081526020016000205460405180591061080c5750595b9080825280602002602001820160405250925060009150600090505b60058054905081101561095457846003600060058481548110151561084957fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541415610947576005818154811015156108c857fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838381518110151561090257fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081806001019250505b8080600101915050610828565b829350505050919050565b6000600580549050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061099d3361078c565b9050600854341415156109af57600080fd5b6002811480156109bf5750600283145b156109dd576109cc610bc5565b6109d4610bf9565b600191506109e2565b600091505b50919050565b60006005828154811015156109f957fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610a383361078c565b9050600a5434141515610a4a57600080fd5b600481148015610a5a5750600483145b15610a7857610a67610bc5565b610a6f610bf9565b60019150610a7d565b600091505b50919050565b600180600001908060010154905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610aef57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610b2b57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080610b7a3361078c565b9050600b5434141515610b8c57600080fd5b600581148015610b9c5750600583145b15610bba57610ba9610bc5565b610bb1610bf9565b60019150610bbf565b600091505b50919050565b6000610bd03361078c565b905060066000828152602001908152602001600020600081548092919060019003919050555050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008154809291906001019190505550610c563361078c565b9050600660008281526020019081526020016000206000815480929190600101919050555050565b815481835581811511610ca557818360005260206000209182019101610ca49190610d3e565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ceb57805160ff1916838001178555610d19565b82800160010185558215610d19579182015b82811115610d18578251825591602001919060010190610cfd565b5b509050610d269190610d3e565b5090565b602060405190810160405280600081525090565b610d6091905b80821115610d5c576000816000905550600101610d44565b5090565b905600a165627a7a72305820c571ffb16d6c30b4829ae0e1cb507f15d6876d8b319f9e1c81ac3893606f32dd0029",
  "sourceMap": "53:570:0:-;;;187:9:2;167:29;;181:9:5;161:29;;183:9:4;163:29;;186:9:1;166:29;;184:9:0;164:29;;200:10:8;192:5;;:18;;;;;;;;;;;;;;;;;;53:570:0;;;;;;",
  "deployedSourceMap": "53:570:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2094:125:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;581:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:316:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;311:312:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:554:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1854:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2421:429;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;1988:100:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;302:313:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2225:117:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:315:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;409:23:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;432:132:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;305:315:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2094:125:9;2162:4;2185:20;:27;2206:5;2185:27;;;;;;;;;;;;2178:34;;2094:125;;;:::o;581:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;304:316:4:-;361:4;376:10;389:24;402:10;389:12;:24::i;:::-;376:37;;442:12;;429:9;:25;421:34;;;;;;;;474:1;465:5;:10;:25;;;;;489:1;479:6;:11;465:25;461:155;;;498:22;:20;:22::i;:::-;527:16;:14;:16::i;:::-;557:4;550:11;;;;461:155;599:5;592:12;;304:316;;;;;:::o;311:312:2:-;366:4;378:10;391:24;404:10;391:12;:24::i;:::-;378:37;;443:12;;430:9;:25;422:34;;;;;;;;475:1;466:5;:10;:25;;;;;490:1;480:6;:11;466:25;462:155;;;499:22;:20;:22::i;:::-;528:16;:14;:16::i;:::-;558:4;551:11;;;;462:155;600:5;593:12;;311:312;;;;;:::o;794:554:9:-;1081:10;894:13;:30;;;;;;;;;;;:::i;:::-;;;;;;;;;;913:10;894:30;;;;;;;;;;;;;;;;;;;;;;;991:4;960:11;:23;972:10;960:23;;;;;;;;;;;;;;;:28;;:35;;;;;;;;;;;;:::i;:::-;;1069:1;1037:11;:23;1049:10;1037:23;;;;;;;;;;;;;;;:29;;:33;;;;1094:24;1107:10;1094:12;:24::i;:::-;1081:37;;1312:20;:27;1333:5;1312:27;;;;;;;;;;;;:29;;;;;;;;;;;;;794:554;;:::o;1854:128::-;1922:4;1945:11;:24;1957:11;1945:24;;;;;;;;;;;;;;;:30;;;1938:37;;1854:128;;;:::o;2421:429::-;2479:9;;:::i;:::-;2500:23;;:::i;:::-;2579:12;2610:6;2540:20;:28;2561:6;2540:28;;;;;;;;;;;;2526:43;;;;;;;;;;;;;;;;;;;;;;;;2500:69;;2594:1;2579:16;;2619:1;2610:10;;2605:216;2626:13;:20;;;;2622:1;:24;2605:216;;;2709:6;2670:11;:29;2682:13;2696:1;2682:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;2670:29;;;;;;;;;;;;;;;:35;;;:45;2667:144;;;2753:13;2767:1;2753:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:6;2742:7;2735:15;;;;;;;;;;;;;;;;;:34;;;;;;;;;;;2787:9;;;;;;;2667:144;2648:3;;;;;;;2605:216;;;2837:6;2830:13;;2421:429;;;;;;:::o;1988:100::-;2038:4;2061:13;:20;;;;2054:27;;1988:100;:::o;49:20:8:-;;;;;;;;;;;;;:::o;302:313:5:-;357:4;372:10;385:24;398:10;385:12;:24::i;:::-;372:37;;438:12;;425:9;:25;417:34;;;;;;;;470:1;461:5;:10;:25;;;;;485:1;475:6;:11;461:25;457:154;;;494:22;:20;:22::i;:::-;522:16;:14;:16::i;:::-;552:4;545:11;;;;457:154;594:5;587:12;;302:313;;;;;:::o;2225:117:9:-;2289:7;2315:13;2329:5;2315:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;2308:27;;2225:117;;;:::o;307:315:1:-;363:4;378:10;391:24;404:10;391:12;:24::i;:::-;378:37;;444:12;;431:9;:25;423:34;;;;;;;;476:1;467:5;:10;:25;;;;;491:1;481:6;:11;467:25;463:155;;;500:22;:20;:22::i;:::-;529:16;:14;:16::i;:::-;559:4;552:11;;;;463:155;601:5;594:12;;307:315;;;;;:::o;409:23:9:-;;;;;;;;;;;;;:::o;432:132:8:-;328:5;;;;;;;;;;;314:19;;:10;:19;;;306:28;;;;;;;;528:1;508:22;;:8;:22;;;;500:31;;;;;;;;551:8;543:5;;:16;;;;;;;;;;;;;;;;;;432:132;:::o;305:315:0:-;361:4;376:10;389:24;402:10;389:12;:24::i;:::-;376:37;;442:12;;429:9;:25;421:34;;;;;;;;474:1;465:5;:10;:25;;;;;489:1;479:6;:11;465:25;461:155;;;498:22;:20;:22::i;:::-;527:16;:14;:16::i;:::-;557:4;550:11;;;;461:155;599:5;592:12;;305:315;;;;;:::o;1567:135:9:-;1618:10;1631:24;1644:10;1631:12;:24::i;:::-;1618:37;;1666:20;:27;1687:5;1666:27;;;;;;;;;;;;:29;;;;;;;;;;;;;;1567:135;:::o;1354:207::-;1476:10;1434:11;:23;1446:10;1434:23;;;;;;;;;;;;;;;:29;;;:31;;;;;;;;;;;;;1489:24;1502:10;1489:12;:24::i;:::-;1476:37;;1524:20;:27;1545:5;1524:27;;;;;;;;;;;;:29;;;;;;;;;;;;;1354:207;:::o;53:570:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.17;\n\nimport \"./LevelFour.sol\";\n\ncontract LevelFive is LevelFour { \n\n\t// @dev This is the amount of ETH a user has to spend to make a guess\n    uint payToPlayFee = .01 ether;\n\n    // @dev If a user guesses correctly, the incrementLevel() is called and they advance to the next level \n\tfunction levelFive(uint answer) public payable returns (bool) {\n\t\t\t\n\t\t\tuint level = currentLevel(msg.sender);\t\t\n\n\t\t\trequire(msg.value == payToPlayFee);\n\n\t\t\tif (level == 5 && answer == 5) {\n\t\t\t\tremoveFromPriorLevel();\n\n\t\t\t\tincrementLevel();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\n            \treturn false;\n        \t}\n\t\t}\n\n}\n",
  "sourcePath": "/Users/kseniya/Documents/coding/blockchainCoding/blockchain-tutorial/contracts/LevelFive.sol",
  "ast": {
    "absolutePath": "/Users/kseniya/Documents/coding/blockchainCoding/blockchain-tutorial/contracts/LevelFive.sol",
    "exportedSymbols": {
      "LevelFive": [
        50
      ]
    },
    "id": 51,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/kseniya/Documents/coding/blockchainCoding/blockchain-tutorial/contracts/LevelFour.sol",
        "file": "./LevelFour.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 51,
        "sourceUnit": 102,
        "src": "26:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "LevelFour",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 101,
              "src": "75:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LevelFour_$101",
                "typeString": "contract LevelFour"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "75:9:0"
          }
        ],
        "contractDependencies": [
          641,
          860,
          152,
          279,
          101,
          330
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 50,
        "linearizedBaseContracts": [
          50,
          101,
          279,
          330,
          152,
          860,
          641
        ],
        "name": "LevelFive",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "payToPlayFee",
            "nodeType": "VariableDeclaration",
            "scope": 50,
            "src": "164:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "164:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "2e3031",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "184:9:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": ".01"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "367:253:0",
              "statements": [
                {
                  "assignments": [
                    15
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15,
                      "name": "level",
                      "nodeType": "VariableDeclaration",
                      "scope": 49,
                      "src": "376:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "376:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 17,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 970,
                          "src": "402:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "402:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16,
                      "name": "currentLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "389:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "389:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "376:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 22,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 970,
                            "src": "429:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "429:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24,
                          "name": "payToPlayFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "442:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "429:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "421:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "421:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "421:34:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 30,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 28,
                        "name": "level",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "465:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "474:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "465:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 31,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "479:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "489:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "479:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "465:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 46,
                    "nodeType": "Block",
                    "src": "576:40:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "599:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 13,
                        "id": 45,
                        "nodeType": "Return",
                        "src": "592:12:0"
                      }
                    ]
                  },
                  "id": 47,
                  "nodeType": "IfStatement",
                  "src": "461:155:0",
                  "trueBody": {
                    "id": 43,
                    "nodeType": "Block",
                    "src": "492:75:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35,
                            "name": "removeFromPriorLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "498:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "498:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "498:22:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38,
                            "name": "incrementLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 736,
                            "src": "527:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "527:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40,
                        "nodeType": "ExpressionStatement",
                        "src": "527:16:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "557:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 13,
                        "id": 42,
                        "nodeType": "Return",
                        "src": "550:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 49,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "levelFive",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "324:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "323:13:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "361:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "361:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "360:6:0"
            },
            "scope": 50,
            "src": "305:315:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 51,
        "src": "53:570:0"
      }
    ],
    "src": "0:624:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/kseniya/Documents/coding/blockchainCoding/blockchain-tutorial/contracts/LevelFive.sol",
    "exportedSymbols": {
      "LevelFive": [
        50
      ]
    },
    "id": 51,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/kseniya/Documents/coding/blockchainCoding/blockchain-tutorial/contracts/LevelFour.sol",
        "file": "./LevelFour.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 51,
        "sourceUnit": 102,
        "src": "26:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "LevelFour",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 101,
              "src": "75:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LevelFour_$101",
                "typeString": "contract LevelFour"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "75:9:0"
          }
        ],
        "contractDependencies": [
          641,
          860,
          152,
          279,
          101,
          330
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 50,
        "linearizedBaseContracts": [
          50,
          101,
          279,
          330,
          152,
          860,
          641
        ],
        "name": "LevelFive",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "payToPlayFee",
            "nodeType": "VariableDeclaration",
            "scope": 50,
            "src": "164:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "164:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "2e3031",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "184:9:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": ".01"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "367:253:0",
              "statements": [
                {
                  "assignments": [
                    15
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15,
                      "name": "level",
                      "nodeType": "VariableDeclaration",
                      "scope": 49,
                      "src": "376:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "376:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 17,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 970,
                          "src": "402:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "402:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16,
                      "name": "currentLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "389:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "389:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "376:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 22,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 970,
                            "src": "429:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "429:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24,
                          "name": "payToPlayFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "442:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "429:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "421:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "421:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "421:34:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 30,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 28,
                        "name": "level",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "465:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "474:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "465:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 31,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "479:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "489:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "479:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "465:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 46,
                    "nodeType": "Block",
                    "src": "576:40:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "599:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 13,
                        "id": 45,
                        "nodeType": "Return",
                        "src": "592:12:0"
                      }
                    ]
                  },
                  "id": 47,
                  "nodeType": "IfStatement",
                  "src": "461:155:0",
                  "trueBody": {
                    "id": 43,
                    "nodeType": "Block",
                    "src": "492:75:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35,
                            "name": "removeFromPriorLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "498:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "498:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "498:22:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38,
                            "name": "incrementLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 736,
                            "src": "527:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "527:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40,
                        "nodeType": "ExpressionStatement",
                        "src": "527:16:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "557:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 13,
                        "id": 42,
                        "nodeType": "Return",
                        "src": "550:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 49,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "levelFive",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "324:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "323:13:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "361:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "361:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "360:6:0"
            },
            "scope": 50,
            "src": "305:315:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 51,
        "src": "53:570:0"
      }
    ],
    "src": "0:624:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {
    "1523057109908": {
      "events": {},
      "links": {},
      "address": "0xb1c651c890de49af319c106261a5c31c6c0b949c",
      "transactionHash": "0x3108a062fce0a47b3262eaff8c16ead802a7a4bdfe530d3692beb7fc31ab072b"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-06T23:44:46.513Z"
}