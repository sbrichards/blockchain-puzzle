{
  "contractName": "LevelFour",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "level",
          "type": "uint256"
        }
      ],
      "name": "numberOfUsersPerLevel",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "levelThree",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "levelOne",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "currentLevel",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_level",
          "type": "uint256"
        }
      ],
      "name": "usersInLevel",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberOfUsers",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "levelTwo",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getAddressByIndex",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "users",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "level",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "levelFour",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x6060604052662386f26fc10000600755662386f26fc10000600855662386f26fc10000600955662386f26fc10000600a55336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610cfd8061007f6000396000f3006060604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c024234146100d55780630d7b081c1461010c578063146cb2591461016f57806337c40f4e1461019f578063507ffba5146101cf578063691a037a1461022c578063727ff93b1461027957806375ce46a7146102f15780638da5cb5b1461031a578063928074fd1461036f578063ce10cf881461039f578063d94e2ad514610402578063f202027514610432578063f2fde38b146104e4575b600080fd5b34156100e057600080fd5b6100f6600480803590602001909190505061051d565b6040518082815260200191505060405180910390f35b341561011757600080fd5b61012d600480803590602001909190505061053a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610185600480803590602001909190505061056d565b604051808215151515815260200191505060405180910390f35b6101b560048080359060200190919050506105c4565b604051808215151515815260200191505060405180910390f35b34156101da57600080fd5b61022a600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061061b565b005b341561023757600080fd5b610263600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610751565b6040518082815260200191505060405180910390f35b341561028457600080fd5b61029a600480803590602001909190505061079d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102dd5780820151818401526020810190506102c2565b505050509050019250505060405180910390f35b34156102fc57600080fd5b610304610924565b6040518082815260200191505060405180910390f35b341561032557600080fd5b61032d610931565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103856004808035906020019091905050610956565b604051808215151515815260200191505060405180910390f35b34156103aa57600080fd5b6103c060048080359060200190919050506109ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041860048080359060200190919050506109f1565b604051808215151515815260200191505060405180910390f35b341561043d57600080fd5b610445610a48565b60405180806020018381526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156104d45780601f106104a9576101008083540402835291602001916104d4565b820191906000526020600020905b8154815290600101906020018083116104b757829003601f168201915b5050935050505060405180910390f35b34156104ef57600080fd5b61051b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a59565b005b600060066000838152602001908152602001600020549050919050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061057933610751565b90506009543414151561058b57600080fd5b60038114801561059b5750600383145b156105b9576105a8610b33565b6105b0610b67565b600191506105be565b600091505b50919050565b6000806105d033610751565b9050600754341415156105e257600080fd5b6001811480156105f25750600183145b15610610576105ff610b33565b610607610b67565b60019150610615565b600091505b50919050565b6000600580548060010182816106319190610bec565b9160005260206000209001600033909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190805190602001906106d6929190610c18565b506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061072833610751565b905060066000828152602001908152602001600020600081548092919060010191905055505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b6107a5610c98565b6107ad610c98565b60008060066000868152602001908152602001600020546040518059106107d15750595b9080825280602002602001820160405250925060009150600090505b60058054905081101561091957846003600060058481548110151561080e57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141561090c5760058181548110151561088d57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683838151811015156108c757fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081806001019250505b80806001019150506107ed565b829350505050919050565b6000600580549050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061096233610751565b90506008543414151561097457600080fd5b6002811480156109845750600283145b156109a257610991610b33565b610999610b67565b600191506109a7565b600091505b50919050565b60006005828154811015156109be57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109fd33610751565b9050600a5434141515610a0f57600080fd5b600481148015610a1f5750600483145b15610a3d57610a2c610b33565b610a34610b67565b60019150610a42565b600091505b50919050565b600180600001908060010154905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ab457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610af057600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610b3e33610751565b905060066000828152602001908152602001600020600081548092919060019003919050555050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008154809291906001019190505550610bc433610751565b9050600660008281526020019081526020016000206000815480929190600101919050555050565b815481835581811511610c1357818360005260206000209182019101610c129190610cac565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c5957805160ff1916838001178555610c87565b82800160010185558215610c87579182015b82811115610c86578251825591602001919060010190610c6b565b5b509050610c949190610cac565b5090565b602060405190810160405280600081525090565b610cce91905b80821115610cca576000816000905550600101610cb2565b5090565b905600a165627a7a72305820f003d63bddede9f96c3dcdbc173ec9b7a22653d9bbfaf154aea52624efecef3a0029",
  "deployedBytecode": "0x6060604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c024234146100d55780630d7b081c1461010c578063146cb2591461016f57806337c40f4e1461019f578063507ffba5146101cf578063691a037a1461022c578063727ff93b1461027957806375ce46a7146102f15780638da5cb5b1461031a578063928074fd1461036f578063ce10cf881461039f578063d94e2ad514610402578063f202027514610432578063f2fde38b146104e4575b600080fd5b34156100e057600080fd5b6100f6600480803590602001909190505061051d565b6040518082815260200191505060405180910390f35b341561011757600080fd5b61012d600480803590602001909190505061053a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610185600480803590602001909190505061056d565b604051808215151515815260200191505060405180910390f35b6101b560048080359060200190919050506105c4565b604051808215151515815260200191505060405180910390f35b34156101da57600080fd5b61022a600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061061b565b005b341561023757600080fd5b610263600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610751565b6040518082815260200191505060405180910390f35b341561028457600080fd5b61029a600480803590602001909190505061079d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102dd5780820151818401526020810190506102c2565b505050509050019250505060405180910390f35b34156102fc57600080fd5b610304610924565b6040518082815260200191505060405180910390f35b341561032557600080fd5b61032d610931565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103856004808035906020019091905050610956565b604051808215151515815260200191505060405180910390f35b34156103aa57600080fd5b6103c060048080359060200190919050506109ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041860048080359060200190919050506109f1565b604051808215151515815260200191505060405180910390f35b341561043d57600080fd5b610445610a48565b60405180806020018381526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156104d45780601f106104a9576101008083540402835291602001916104d4565b820191906000526020600020905b8154815290600101906020018083116104b757829003601f168201915b5050935050505060405180910390f35b34156104ef57600080fd5b61051b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a59565b005b600060066000838152602001908152602001600020549050919050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061057933610751565b90506009543414151561058b57600080fd5b60038114801561059b5750600383145b156105b9576105a8610b33565b6105b0610b67565b600191506105be565b600091505b50919050565b6000806105d033610751565b9050600754341415156105e257600080fd5b6001811480156105f25750600183145b15610610576105ff610b33565b610607610b67565b60019150610615565b600091505b50919050565b6000600580548060010182816106319190610bec565b9160005260206000209001600033909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190805190602001906106d6929190610c18565b506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061072833610751565b905060066000828152602001908152602001600020600081548092919060010191905055505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b6107a5610c98565b6107ad610c98565b60008060066000868152602001908152602001600020546040518059106107d15750595b9080825280602002602001820160405250925060009150600090505b60058054905081101561091957846003600060058481548110151561080e57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141561090c5760058181548110151561088d57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683838151811015156108c757fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081806001019250505b80806001019150506107ed565b829350505050919050565b6000600580549050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061096233610751565b90506008543414151561097457600080fd5b6002811480156109845750600283145b156109a257610991610b33565b610999610b67565b600191506109a7565b600091505b50919050565b60006005828154811015156109be57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109fd33610751565b9050600a5434141515610a0f57600080fd5b600481148015610a1f5750600483145b15610a3d57610a2c610b33565b610a34610b67565b60019150610a42565b600091505b50919050565b600180600001908060010154905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ab457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610af057600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610b3e33610751565b905060066000828152602001908152602001600020600081548092919060019003919050555050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008154809291906001019190505550610bc433610751565b9050600660008281526020019081526020016000206000815480929190600101919050555050565b815481835581811511610c1357818360005260206000209182019101610c129190610cac565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c5957805160ff1916838001178555610c87565b82800160010185558215610c87579182015b82811115610c86578251825591602001919060010190610c6b565b5b509050610c949190610cac565b5090565b602060405190810160405280600081525090565b610cce91905b80821115610cca576000816000905550600101610cb2565b5090565b905600a165627a7a72305820f003d63bddede9f96c3dcdbc173ec9b7a22653d9bbfaf154aea52624efecef3a0029",
  "sourceMap": "54:571:1:-;;;187:9:2;167:29;;181:9:5;161:29;;183:9:4;163:29;;186:9:1;166:29;;200:10:8;192:5;;:18;;;;;;;;;;;;;;;;;;54:571:1;;;;;;",
  "deployedSourceMap": "54:571:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2094:125:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;581:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:316:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;311:312:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:554:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1854:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2421:429;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;1988:100:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;302:313:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2225:117:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:315:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;409:23:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;432:132:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;2094:125:9;2162:4;2185:20;:27;2206:5;2185:27;;;;;;;;;;;;2178:34;;2094:125;;;:::o;581:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;304:316:4:-;361:4;376:10;389:24;402:10;389:12;:24::i;:::-;376:37;;442:12;;429:9;:25;421:34;;;;;;;;474:1;465:5;:10;:25;;;;;489:1;479:6;:11;465:25;461:155;;;498:22;:20;:22::i;:::-;527:16;:14;:16::i;:::-;557:4;550:11;;;;461:155;599:5;592:12;;304:316;;;;;:::o;311:312:2:-;366:4;378:10;391:24;404:10;391:12;:24::i;:::-;378:37;;443:12;;430:9;:25;422:34;;;;;;;;475:1;466:5;:10;:25;;;;;490:1;480:6;:11;466:25;462:155;;;499:22;:20;:22::i;:::-;528:16;:14;:16::i;:::-;558:4;551:11;;;;462:155;600:5;593:12;;311:312;;;;;:::o;794:554:9:-;1081:10;894:13;:30;;;;;;;;;;;:::i;:::-;;;;;;;;;;913:10;894:30;;;;;;;;;;;;;;;;;;;;;;;991:4;960:11;:23;972:10;960:23;;;;;;;;;;;;;;;:28;;:35;;;;;;;;;;;;:::i;:::-;;1069:1;1037:11;:23;1049:10;1037:23;;;;;;;;;;;;;;;:29;;:33;;;;1094:24;1107:10;1094:12;:24::i;:::-;1081:37;;1312:20;:27;1333:5;1312:27;;;;;;;;;;;;:29;;;;;;;;;;;;;794:554;;:::o;1854:128::-;1922:4;1945:11;:24;1957:11;1945:24;;;;;;;;;;;;;;;:30;;;1938:37;;1854:128;;;:::o;2421:429::-;2479:9;;:::i;:::-;2500:23;;:::i;:::-;2579:12;2610:6;2540:20;:28;2561:6;2540:28;;;;;;;;;;;;2526:43;;;;;;;;;;;;;;;;;;;;;;;;2500:69;;2594:1;2579:16;;2619:1;2610:10;;2605:216;2626:13;:20;;;;2622:1;:24;2605:216;;;2709:6;2670:11;:29;2682:13;2696:1;2682:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;2670:29;;;;;;;;;;;;;;;:35;;;:45;2667:144;;;2753:13;2767:1;2753:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:6;2742:7;2735:15;;;;;;;;;;;;;;;;;:34;;;;;;;;;;;2787:9;;;;;;;2667:144;2648:3;;;;;;;2605:216;;;2837:6;2830:13;;2421:429;;;;;;:::o;1988:100::-;2038:4;2061:13;:20;;;;2054:27;;1988:100;:::o;49:20:8:-;;;;;;;;;;;;;:::o;302:313:5:-;357:4;372:10;385:24;398:10;385:12;:24::i;:::-;372:37;;438:12;;425:9;:25;417:34;;;;;;;;470:1;461:5;:10;:25;;;;;485:1;475:6;:11;461:25;457:154;;;494:22;:20;:22::i;:::-;522:16;:14;:16::i;:::-;552:4;545:11;;;;457:154;594:5;587:12;;302:313;;;;;:::o;2225:117:9:-;2289:7;2315:13;2329:5;2315:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;2308:27;;2225:117;;;:::o;307:315:1:-;363:4;378:10;391:24;404:10;391:12;:24::i;:::-;378:37;;444:12;;431:9;:25;423:34;;;;;;;;476:1;467:5;:10;:25;;;;;491:1;481:6;:11;467:25;463:155;;;500:22;:20;:22::i;:::-;529:16;:14;:16::i;:::-;559:4;552:11;;;;463:155;601:5;594:12;;307:315;;;;;:::o;409:23:9:-;;;;;;;;;;;;;:::o;432:132:8:-;328:5;;;;;;;;;;;314:19;;:10;:19;;;306:28;;;;;;;;528:1;508:22;;:8;:22;;;;500:31;;;;;;;;551:8;543:5;;:16;;;;;;;;;;;;;;;;;;432:132;:::o;1567:135:9:-;1618:10;1631:24;1644:10;1631:12;:24::i;:::-;1618:37;;1666:20;:27;1687:5;1666:27;;;;;;;;;;;;:29;;;;;;;;;;;;;;1567:135;:::o;1354:207::-;1476:10;1434:11;:23;1446:10;1434:23;;;;;;;;;;;;;;;:29;;;:31;;;;;;;;;;;;;1489:24;1502:10;1489:12;:24::i;:::-;1476:37;;1524:20;:27;1545:5;1524:27;;;;;;;;;;;;:29;;;;;;;;;;;;;1354:207;:::o;54:571:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.17;\n\nimport \"./LevelThree.sol\";\n\ncontract LevelFour is LevelThree { \n\n\t// @dev This is the amount of ETH a user has to spend to make a guess\n    uint payToPlayFee = .01 ether;\n\n    // @dev If a user guesses correctly, the incrementLevel() is called and they advance to the next level \n\tfunction levelFour(uint answer) public payable returns (bool) {\n\t\t\t\n\t\t\tuint level = currentLevel(msg.sender);\t\t\n\n\t\t\trequire(msg.value == payToPlayFee);\n\n\t\t\tif (level == 4 && answer == 4) {\n\t\t\t\tremoveFromPriorLevel();\n\n\t\t\t\tincrementLevel();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\n            \treturn false;\n        \t}\n\t\t}\n\n}\n",
  "sourcePath": "/Users/kseniya/Documents/coding/blockchainCoding/blockchain-tutorial/contracts/LevelFour.sol",
  "ast": {
    "absolutePath": "/Users/kseniya/Documents/coding/blockchainCoding/blockchain-tutorial/contracts/LevelFour.sol",
    "exportedSymbols": {
      "LevelFour": [
        101
      ]
    },
    "id": 102,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 52,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/kseniya/Documents/coding/blockchainCoding/blockchain-tutorial/contracts/LevelThree.sol",
        "file": "./LevelThree.sol",
        "id": 53,
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 280,
        "src": "26:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 54,
              "name": "LevelThree",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 279,
              "src": "76:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LevelThree_$279",
                "typeString": "contract LevelThree"
              }
            },
            "id": 55,
            "nodeType": "InheritanceSpecifier",
            "src": "76:10:1"
          }
        ],
        "contractDependencies": [
          641,
          860,
          152,
          279,
          330
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 101,
        "linearizedBaseContracts": [
          101,
          279,
          330,
          152,
          860,
          641
        ],
        "name": "LevelFour",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 58,
            "name": "payToPlayFee",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "166:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 56,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "166:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "2e3031",
              "id": 57,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "186:9:1",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": ".01"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "369:253:1",
              "statements": [
                {
                  "assignments": [
                    66
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66,
                      "name": "level",
                      "nodeType": "VariableDeclaration",
                      "scope": 100,
                      "src": "378:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "378:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 71,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 68,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 970,
                          "src": "404:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "404:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 67,
                      "name": "currentLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "391:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "391:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "378:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 73,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 970,
                            "src": "431:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "431:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 75,
                          "name": "payToPlayFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "444:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "431:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "423:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "423:34:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 79,
                        "name": "level",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "467:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "34",
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "476:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "src": "467:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "481:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "34",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "491:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "src": "481:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "467:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "578:40:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "601:5:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 64,
                        "id": 96,
                        "nodeType": "Return",
                        "src": "594:12:1"
                      }
                    ]
                  },
                  "id": 98,
                  "nodeType": "IfStatement",
                  "src": "463:155:1",
                  "trueBody": {
                    "id": 94,
                    "nodeType": "Block",
                    "src": "494:75:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 86,
                            "name": "removeFromPriorLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "500:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "500:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 88,
                        "nodeType": "ExpressionStatement",
                        "src": "500:22:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 89,
                            "name": "incrementLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 736,
                            "src": "529:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "529:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "529:16:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "559:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 64,
                        "id": 93,
                        "nodeType": "Return",
                        "src": "552:11:1"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 100,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "levelFour",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "326:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "325:13:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "363:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "362:6:1"
            },
            "scope": 101,
            "src": "307:315:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 102,
        "src": "54:571:1"
      }
    ],
    "src": "0:626:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/kseniya/Documents/coding/blockchainCoding/blockchain-tutorial/contracts/LevelFour.sol",
    "exportedSymbols": {
      "LevelFour": [
        101
      ]
    },
    "id": 102,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 52,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/kseniya/Documents/coding/blockchainCoding/blockchain-tutorial/contracts/LevelThree.sol",
        "file": "./LevelThree.sol",
        "id": 53,
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 280,
        "src": "26:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 54,
              "name": "LevelThree",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 279,
              "src": "76:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LevelThree_$279",
                "typeString": "contract LevelThree"
              }
            },
            "id": 55,
            "nodeType": "InheritanceSpecifier",
            "src": "76:10:1"
          }
        ],
        "contractDependencies": [
          641,
          860,
          152,
          279,
          330
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 101,
        "linearizedBaseContracts": [
          101,
          279,
          330,
          152,
          860,
          641
        ],
        "name": "LevelFour",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 58,
            "name": "payToPlayFee",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "166:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 56,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "166:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "2e3031",
              "id": 57,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "186:9:1",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": ".01"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "369:253:1",
              "statements": [
                {
                  "assignments": [
                    66
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66,
                      "name": "level",
                      "nodeType": "VariableDeclaration",
                      "scope": 100,
                      "src": "378:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "378:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 71,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 68,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 970,
                          "src": "404:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "404:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 67,
                      "name": "currentLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "391:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "391:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "378:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 73,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 970,
                            "src": "431:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "431:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 75,
                          "name": "payToPlayFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "444:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "431:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "423:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "423:34:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 79,
                        "name": "level",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "467:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "34",
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "476:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "src": "467:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "481:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "34",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "491:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "src": "481:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "467:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "578:40:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "601:5:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 64,
                        "id": 96,
                        "nodeType": "Return",
                        "src": "594:12:1"
                      }
                    ]
                  },
                  "id": 98,
                  "nodeType": "IfStatement",
                  "src": "463:155:1",
                  "trueBody": {
                    "id": 94,
                    "nodeType": "Block",
                    "src": "494:75:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 86,
                            "name": "removeFromPriorLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "500:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "500:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 88,
                        "nodeType": "ExpressionStatement",
                        "src": "500:22:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 89,
                            "name": "incrementLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 736,
                            "src": "529:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "529:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "529:16:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "559:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 64,
                        "id": 93,
                        "nodeType": "Return",
                        "src": "552:11:1"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 100,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "levelFour",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "326:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "325:13:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "363:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "362:6:1"
            },
            "scope": 101,
            "src": "307:315:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 102,
        "src": "54:571:1"
      }
    ],
    "src": "0:626:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {
    "1523057109908": {
      "events": {},
      "links": {},
      "address": "0x73cf55117804c50152455789bbeecdac87eb267f",
      "transactionHash": "0x644f1928ed046e2807074e8bf77225b21a13f7994fc28c63f6d16aaebceeb9e6"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-06T23:44:46.334Z"
}