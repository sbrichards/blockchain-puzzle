{
  "contractName": "LevelFour",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "level",
          "type": "uint256"
        }
      ],
      "name": "numberOfUsersPerLevel",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "levelThree",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "levelOne",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userAddresses",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "currentLevel",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_level",
          "type": "uint256"
        }
      ],
      "name": "usersInLevel",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberOfUsers",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "levelTwo",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getAddressByIndex",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "answer",
          "type": "uint256"
        }
      ],
      "name": "levelFour",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052662386f26fc10000600455662386f26fc10000600555662386f26fc10000600655662386f26fc10000600755336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c698061007f6000396000f3006080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c024234146100ca578063146cb2591461010b57806337c40f4e14610143578063502c9bd51461017b578063507ffba5146101e8578063691a037a14610251578063727ff93b146102a857806375ce46a71461032a5780638da5cb5b14610355578063928074fd146103ac578063ce10cf88146103e4578063d94e2ad514610451578063f2fde38b14610489575b600080fd5b3480156100d657600080fd5b506100f5600480360381019080803590602001909291905050506104cc565b6040518082815260200191505060405180910390f35b610129600480360381019080803590602001909291905050506104e9565b604051808215151515815260200191505060405180910390f35b61016160048036038101908080359060200190929190505050610540565b604051808215151515815260200191505060405180910390f35b34801561018757600080fd5b506101a660048036038101908080359060200190929190505050610597565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101f457600080fd5b5061024f600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506105d5565b005b34801561025d57600080fd5b50610292600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061070d565b6040518082815260200191505060405180910390f35b3480156102b457600080fd5b506102d360048036038101908080359060200190929190505050610759565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103165780820151818401526020810190506102fb565b505050509050019250505060405180910390f35b34801561033657600080fd5b5061033f6108e2565b6040518082815260200191505060405180910390f35b34801561036157600080fd5b5061036a6108ef565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103ca60048036038101908080359060200190929190505050610914565b604051808215151515815260200191505060405180910390f35b3480156103f057600080fd5b5061040f6004803603810190808035906020019092919050505061096b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61046f600480360381019080803590602001909291905050506109ae565b604051808215151515815260200191505060405180910390f35b34801561049557600080fd5b506104ca600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a05565b005b600060036000838152602001908152602001600020549050919050565b6000806104f53361070d565b90506006543414151561050757600080fd5b6003811480156105175750600383145b1561053557610524610adf565b61052c610b13565b6001915061053a565b600091505b50919050565b60008061054c3361070d565b90506004543414151561055e57600080fd5b60018114801561056e5750600183145b1561058c5761057b610adf565b610583610b13565b60019150610591565b600091505b50919050565b6002818154811015156105a657fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060023390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019080519060200190610693929190610b98565b5060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506106e43361070d565b905060036000828152602001908152602001600020600081548092919060010191905055505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b60608060008060036000868152602001908152602001600020546040519080825280602002602001820160405280156107a15781602001602082028038833980820191505090505b50925060009150600090505b6002805490508110156108d75784600160006002848154811015156107ce57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156108ca5760028181548110151561084c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838381518110151561088557fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081806001019250505b80806001019150506107ad565b829350505050919050565b6000600280549050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806109203361070d565b90506005543414151561093257600080fd5b6002811480156109425750600283145b156109605761094f610adf565b610957610b13565b60019150610965565b600091505b50919050565b600060028281548110151561097c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109ba3361070d565b9050600754341415156109cc57600080fd5b6004811480156109dc5750600483145b156109fa576109e9610adf565b6109f1610b13565b600191506109ff565b600091505b50919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a6057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a9c57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610aea3361070d565b905060036000828152602001908152602001600020600081548092919060019003919050555050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008154809291906001019190505550610b703361070d565b9050600360008281526020019081526020016000206000815480929190600101919050555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610bd957805160ff1916838001178555610c07565b82800160010185558215610c07579182015b82811115610c06578251825591602001919060010190610beb565b5b509050610c149190610c18565b5090565b610c3a91905b80821115610c36576000816000905550600101610c1e565b5090565b905600a165627a7a72305820bb11e79b741900353bd42737684741875a3cdeafb04689bf08d4a0677b817a460029",
  "deployedBytecode": "0x6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c024234146100ca578063146cb2591461010b57806337c40f4e14610143578063502c9bd51461017b578063507ffba5146101e8578063691a037a14610251578063727ff93b146102a857806375ce46a71461032a5780638da5cb5b14610355578063928074fd146103ac578063ce10cf88146103e4578063d94e2ad514610451578063f2fde38b14610489575b600080fd5b3480156100d657600080fd5b506100f5600480360381019080803590602001909291905050506104cc565b6040518082815260200191505060405180910390f35b610129600480360381019080803590602001909291905050506104e9565b604051808215151515815260200191505060405180910390f35b61016160048036038101908080359060200190929190505050610540565b604051808215151515815260200191505060405180910390f35b34801561018757600080fd5b506101a660048036038101908080359060200190929190505050610597565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101f457600080fd5b5061024f600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506105d5565b005b34801561025d57600080fd5b50610292600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061070d565b6040518082815260200191505060405180910390f35b3480156102b457600080fd5b506102d360048036038101908080359060200190929190505050610759565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103165780820151818401526020810190506102fb565b505050509050019250505060405180910390f35b34801561033657600080fd5b5061033f6108e2565b6040518082815260200191505060405180910390f35b34801561036157600080fd5b5061036a6108ef565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103ca60048036038101908080359060200190929190505050610914565b604051808215151515815260200191505060405180910390f35b3480156103f057600080fd5b5061040f6004803603810190808035906020019092919050505061096b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61046f600480360381019080803590602001909291905050506109ae565b604051808215151515815260200191505060405180910390f35b34801561049557600080fd5b506104ca600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a05565b005b600060036000838152602001908152602001600020549050919050565b6000806104f53361070d565b90506006543414151561050757600080fd5b6003811480156105175750600383145b1561053557610524610adf565b61052c610b13565b6001915061053a565b600091505b50919050565b60008061054c3361070d565b90506004543414151561055e57600080fd5b60018114801561056e5750600183145b1561058c5761057b610adf565b610583610b13565b60019150610591565b600091505b50919050565b6002818154811015156105a657fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060023390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019080519060200190610693929190610b98565b5060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506106e43361070d565b905060036000828152602001908152602001600020600081548092919060010191905055505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b60608060008060036000868152602001908152602001600020546040519080825280602002602001820160405280156107a15781602001602082028038833980820191505090505b50925060009150600090505b6002805490508110156108d75784600160006002848154811015156107ce57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156108ca5760028181548110151561084c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838381518110151561088557fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081806001019250505b80806001019150506107ad565b829350505050919050565b6000600280549050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806109203361070d565b90506005543414151561093257600080fd5b6002811480156109425750600283145b156109605761094f610adf565b610957610b13565b60019150610965565b600091505b50919050565b600060028281548110151561097c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109ba3361070d565b9050600754341415156109cc57600080fd5b6004811480156109dc5750600483145b156109fa576109e9610adf565b6109f1610b13565b600191506109ff565b600091505b50919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a6057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a9c57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610aea3361070d565b905060036000828152602001908152602001600020600081548092919060019003919050555050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008154809291906001019190505550610b703361070d565b9050600360008281526020019081526020016000206000815480929190600101919050555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610bd957805160ff1916838001178555610c07565b82800160010185558215610c07579182015b82811115610c06578251825591602001919060010190610beb565b5b509050610c149190610c18565b5090565b610c3a91905b80821115610c36576000816000905550600101610c1e565b5090565b905600a165627a7a72305820bb11e79b741900353bd42737684741875a3cdeafb04689bf08d4a0677b817a460029",
  "sourceMap": "54:571:1:-;;;187:9:2;167:29;;181:9:5;161:29;;183:9:4;163:29;;186:9:1;166:29;;200:10:6;192:5;;:18;;;;;;;;;;;;;;;;;;54:571:1;;;;;;",
  "deployedSourceMap": "54:571:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1915:125:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1915:125:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:316:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;311:312:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;464:30:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;464:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;597:418;;8:9:-1;5:2;;;30:1;27;20:12;5:2;597:418:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:128;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1675:128:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2242:429;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2242:429:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2242:429:7;;;;;;;;;;;;;;;;;1809:100;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1809:100:7;;;;;;;;;;;;;;;;;;;;;;;49:20:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49:20:6;;;;;;;;;;;;;;;;;;;;;;;;;;;302:313:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2046:117:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2046:117:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:315:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;432:132:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;432:132:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;1915:125:7;1983:4;2006:20;:27;2027:5;2006:27;;;;;;;;;;;;1999:34;;1915:125;;;:::o;304:316:4:-;361:4;376:10;389:24;402:10;389:12;:24::i;:::-;376:37;;442:12;;429:9;:25;421:34;;;;;;;;474:1;465:5;:10;:25;;;;;489:1;479:6;:11;465:25;461:155;;;498:22;:20;:22::i;:::-;527:16;:14;:16::i;:::-;557:4;550:11;;;;461:155;599:5;592:12;;304:316;;;;;:::o;311:312:2:-;366:4;378:10;391:24;404:10;391:12;:24::i;:::-;378:37;;443:12;;430:9;:25;422:34;;;;;;;;475:1;466:5;:10;:25;;;;;490:1;480:6;:11;466:25;462:155;;;499:22;:20;:22::i;:::-;528:16;:14;:16::i;:::-;558:4;551:11;;;;462:155;600:5;593:12;;311:312;;;;;:::o;464:30:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;597:418::-;884:10;697:13;716:10;697:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;697:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:4;763:11;:23;775:10;763:23;;;;;;;;;;;;;;;:28;;:35;;;;;;;;;;;;:::i;:::-;;872:1;840:11;:23;852:10;840:23;;;;;;;;;;;;;;;:29;;:33;;;;897:24;910:10;897:12;:24::i;:::-;884:37;;979:20;:27;1000:5;979:27;;;;;;;;;;;;:29;;;;;;;;;;;;;597:418;;:::o;1675:128::-;1743:4;1766:11;:24;1778:11;1766:24;;;;;;;;;;;;;;;:30;;;1759:37;;1675:128;;;:::o;2242:429::-;2300:9;2321:23;2400:12;2431:6;2361:20;:28;2382:6;2361:28;;;;;;;;;;;;2347:43;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2347:43:7;;;;2321:69;;2415:1;2400:16;;2440:1;2431:10;;2426:216;2447:13;:20;;;;2443:1;:24;2426:216;;;2530:6;2491:11;:29;2503:13;2517:1;2503:16;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:29;;;;;;;;;;;;;;;:35;;;:45;2488:144;;;2574:13;2588:1;2574:16;;;;;;;;;;;;;;;;;;;;;;;;;;;2556:6;2563:7;2556:15;;;;;;;;;;;;;;;;;:34;;;;;;;;;;;2608:9;;;;;;;2488:144;2469:3;;;;;;;2426:216;;;2658:6;2651:13;;2242:429;;;;;;:::o;1809:100::-;1859:4;1882:13;:20;;;;1875:27;;1809:100;:::o;49:20:6:-;;;;;;;;;;;;;:::o;302:313:5:-;357:4;372:10;385:24;398:10;385:12;:24::i;:::-;372:37;;438:12;;425:9;:25;417:34;;;;;;;;470:1;461:5;:10;:25;;;;;485:1;475:6;:11;461:25;457:154;;;494:22;:20;:22::i;:::-;522:16;:14;:16::i;:::-;552:4;545:11;;;;457:154;594:5;587:12;;302:313;;;;;:::o;2046:117:7:-;2110:7;2136:13;2150:5;2136:20;;;;;;;;;;;;;;;;;;;;;;;;;;;2129:27;;2046:117;;;:::o;307:315:1:-;363:4;378:10;391:24;404:10;391:12;:24::i;:::-;378:37;;444:12;;431:9;:25;423:34;;;;;;;;476:1;467:5;:10;:25;;;;;491:1;481:6;:11;467:25;463:155;;;500:22;:20;:22::i;:::-;529:16;:14;:16::i;:::-;559:4;552:11;;;;463:155;601:5;594:12;;307:315;;;;;:::o;432:132:6:-;328:5;;;;;;;;;;;314:19;;:10;:19;;;306:28;;;;;;;;528:1;508:22;;:8;:22;;;;500:31;;;;;;;;551:8;543:5;;:16;;;;;;;;;;;;;;;;;;432:132;:::o;1285:238:7:-;1336:10;1349:24;1362:10;1349:12;:24::i;:::-;1336:37;;1487:20;:27;1508:5;1487:27;;;;;;;;;;;;:29;;;;;;;;;;;;;;1285:238;:::o;1021:258::-;1143:10;1101:11;:23;1113:10;1101:23;;;;;;;;;;;;;;;:29;;;:31;;;;;;;;;;;;;1156:24;1169:10;1156:12;:24::i;:::-;1143:37;;1242:20;:27;1263:5;1242:27;;;;;;;;;;;;:29;;;;;;;;;;;;;1021:258;:::o;54:571:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.17;\n\nimport \"./LevelThree.sol\";\n\ncontract LevelFour is LevelThree { \n\n\t// @dev This is the amount of ETH a user has to spend to make a guess\n    uint payToPlayFee = .01 ether;\n\n    // @dev If a user guesses correctly, the incrementLevel() is called and they advance to the next level \n\tfunction levelFour(uint answer) public payable returns (bool) {\n\t\t\t\n\t\t\tuint level = currentLevel(msg.sender);\t\t\n\n\t\t\trequire(msg.value == payToPlayFee);\n\n\t\t\tif (level == 4 && answer == 4) {\n\t\t\t\tremoveFromPriorLevel();\n\n\t\t\t\tincrementLevel();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\n            \treturn false;\n        \t}\n\t\t}\n\n}\n",
  "sourcePath": "/Users/Doug/Desktop/blockchain-game/blockchain-tutorial/contracts/LevelFour.sol",
  "ast": {
    "absolutePath": "/Users/Doug/Desktop/blockchain-game/blockchain-tutorial/contracts/LevelFour.sol",
    "exportedSymbols": {
      "LevelFour": [
        101
      ]
    },
    "id": 102,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 52,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/Doug/Desktop/blockchain-game/blockchain-tutorial/contracts/LevelThree.sol",
        "file": "./LevelThree.sol",
        "id": 53,
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 280,
        "src": "26:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 54,
              "name": "LevelThree",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 279,
              "src": "76:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LevelThree_$279",
                "typeString": "contract LevelThree"
              }
            },
            "id": 55,
            "nodeType": "InheritanceSpecifier",
            "src": "76:10:1"
          }
        ],
        "contractDependencies": [
          152,
          279,
          330,
          375,
          588
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 101,
        "linearizedBaseContracts": [
          101,
          279,
          330,
          152,
          588,
          375
        ],
        "name": "LevelFour",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 58,
            "name": "payToPlayFee",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "166:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 56,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "166:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "2e3031",
              "id": 57,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "186:9:1",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": ".01"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "369:253:1",
              "statements": [
                {
                  "assignments": [
                    66
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66,
                      "name": "level",
                      "nodeType": "VariableDeclaration",
                      "scope": 100,
                      "src": "378:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "378:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 71,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 68,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 701,
                          "src": "404:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "404:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 67,
                      "name": "currentLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "391:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "391:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "378:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 73,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "431:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "431:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 75,
                          "name": "payToPlayFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "444:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "431:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        704,
                        705
                      ],
                      "referencedDeclaration": 704,
                      "src": "423:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "423:34:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 79,
                        "name": "level",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "467:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "34",
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "476:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "src": "467:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "481:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "34",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "491:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "src": "481:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "467:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "578:40:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "601:5:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 64,
                        "id": 96,
                        "nodeType": "Return",
                        "src": "594:12:1"
                      }
                    ]
                  },
                  "id": 98,
                  "nodeType": "IfStatement",
                  "src": "463:155:1",
                  "trueBody": {
                    "id": 94,
                    "nodeType": "Block",
                    "src": "494:75:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 86,
                            "name": "removeFromPriorLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "500:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "500:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 88,
                        "nodeType": "ExpressionStatement",
                        "src": "500:22:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 89,
                            "name": "incrementLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 464,
                            "src": "529:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "529:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "529:16:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "559:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 64,
                        "id": 93,
                        "nodeType": "Return",
                        "src": "552:11:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 100,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "levelFour",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "326:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "325:13:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "363:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "362:6:1"
            },
            "scope": 101,
            "src": "307:315:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 102,
        "src": "54:571:1"
      }
    ],
    "src": "0:626:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/Doug/Desktop/blockchain-game/blockchain-tutorial/contracts/LevelFour.sol",
    "exportedSymbols": {
      "LevelFour": [
        101
      ]
    },
    "id": 102,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 52,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/Doug/Desktop/blockchain-game/blockchain-tutorial/contracts/LevelThree.sol",
        "file": "./LevelThree.sol",
        "id": 53,
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 280,
        "src": "26:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 54,
              "name": "LevelThree",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 279,
              "src": "76:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LevelThree_$279",
                "typeString": "contract LevelThree"
              }
            },
            "id": 55,
            "nodeType": "InheritanceSpecifier",
            "src": "76:10:1"
          }
        ],
        "contractDependencies": [
          152,
          279,
          330,
          375,
          588
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 101,
        "linearizedBaseContracts": [
          101,
          279,
          330,
          152,
          588,
          375
        ],
        "name": "LevelFour",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 58,
            "name": "payToPlayFee",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "166:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 56,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "166:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "2e3031",
              "id": 57,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "186:9:1",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": ".01"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "369:253:1",
              "statements": [
                {
                  "assignments": [
                    66
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66,
                      "name": "level",
                      "nodeType": "VariableDeclaration",
                      "scope": 100,
                      "src": "378:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "378:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 71,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 68,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 701,
                          "src": "404:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "404:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 67,
                      "name": "currentLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "391:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "391:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "378:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 73,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "431:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "431:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 75,
                          "name": "payToPlayFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "444:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "431:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        704,
                        705
                      ],
                      "referencedDeclaration": 704,
                      "src": "423:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "423:34:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 79,
                        "name": "level",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "467:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "34",
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "476:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "src": "467:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "481:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "34",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "491:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "src": "481:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "467:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "578:40:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "601:5:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 64,
                        "id": 96,
                        "nodeType": "Return",
                        "src": "594:12:1"
                      }
                    ]
                  },
                  "id": 98,
                  "nodeType": "IfStatement",
                  "src": "463:155:1",
                  "trueBody": {
                    "id": 94,
                    "nodeType": "Block",
                    "src": "494:75:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 86,
                            "name": "removeFromPriorLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "500:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "500:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 88,
                        "nodeType": "ExpressionStatement",
                        "src": "500:22:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 89,
                            "name": "incrementLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 464,
                            "src": "529:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "529:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "529:16:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "559:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 64,
                        "id": 93,
                        "nodeType": "Return",
                        "src": "552:11:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 100,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "levelFour",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "326:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "325:13:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "363:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "362:6:1"
            },
            "scope": 101,
            "src": "307:315:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 102,
        "src": "54:571:1"
      }
    ],
    "src": "0:626:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {
    "1523057109908": {
      "events": {},
      "links": {},
      "address": "0x73cf55117804c50152455789bbeecdac87eb267f",
      "transactionHash": "0x644f1928ed046e2807074e8bf77225b21a13f7994fc28c63f6d16aaebceeb9e6"
    },
    "1523017973999": {
      "events": {},
      "links": {},
      "address": "0x2366d864430a57fe7b5a3e3302300fbbf4fc6e13",
      "transactionHash": "0xde42644cef6b7024192555be89bbe06a2106159636887fefe12e647a1fa9984a"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-22T15:51:03.711Z"
}